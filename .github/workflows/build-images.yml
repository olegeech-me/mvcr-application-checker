name: Build and Push Docker Images

on:
  push:
    branches:
      - main

jobs:
  docker:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Get the latest Git tag
      id: get_tag
      run: |
        TAG=$(git describe --tags --abbrev=0)
        echo "Latest tag is $TAG"
        echo "::set-output name=base_version::$TAG"
  
    - name: Set short git commit SHA
      id: get_sha
      run: |
        SHORT_SHA=$(git rev-parse --short ${{ github.sha }})
        echo "Short commit SHA is $SHORT_SHA"
        echo "::set-output name=short_sha::$SHORT_SHA"

    # Setup Docker Buildx
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    # Login to Docker Hub
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    # Build and push bot image
    - name: Build and push bot Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile_bot
        push: true
        tags: |
          olegeech/mvcr-application-checker:bot-latest
          olegeech/mvcr-application-checker:bot-${{ steps.get_tag.outputs.base_version }}
        build-args: |
          BASE_VERSION=${{ steps.get_tag.outputs.base_version }}
          GIT_COMMIT=${{ steps.get_sha.outputs.short_sha }}

    # Build and push fetcher image
    - name: Build and push fetcher Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile_fetcher
        push: true
        tags: |
          olegeech/mvcr-application-checker:fetcher-latest
          olegeech/mvcr-application-checker:fetcher-${{ steps.get_tag.outputs.base_version }}
        build-args: |
          BASE_VERSION=${{ steps.get_tag.outputs.base_version }}
          GIT_COMMIT=${{ steps.get_sha.outputs.short_sha }}
